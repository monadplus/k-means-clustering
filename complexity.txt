## Cost Analysis

Total cost (2-dimensions) = O(t*n*k)
Total cost (d-dimensions) = O(t*n*k*d)
Total cost (2-dimensions, unknwon k) = O(kmax * t * n * k)

n = #points
k = #clusters
t = #iterations until wss <= Îµ
d = #dimensions

### Detailed Cost Analysis

getCentroid = O(n + n + ops) = O(n)
  - length = O(n)
  - centroid = O(n)

nearest = O(k + k) = O(k)
  - minIndex = O(k)
  - #centroids * euclidean_distance = k * O(1) = O(k)

computeCluster = O(k + n + n) = O(n)
  - replicate = O(k)
  - foldM = O(n)
  - freeze = O(n)

recomputeCluster = O(n*k + n*k + n) = O(n*k)
  - #clusters * getCentroid = O(k*n)
  - #points * nearest = O(n*k)
  - computeCluster = O(n)

generatePositives = O(n)
  - uniformVector = O(n*c) = O(n), where c is the cost of generating a PRN ~O()
  - toPositive = O(1)

randomAssignment = O(n)
  - generatePositives = O(n)
  - computeCluster = O(n)

Total cost = O(t*n*k)
  - 1*list to vec                  = O(n)
  - 1*randomAssigments             = O(n)
  - iterations * recomputeCluster  = O(t*n*k)
